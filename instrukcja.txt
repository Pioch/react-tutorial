1. Utworzenie projektu (używając Vite)
- npm create vite@latest
- podanie nazwy projektu
- wybranie frameworka
- wybranie języka (TypeScript)
- otworzenie folseru z utworzonym projektem
- npm install

2. Uruchomienie servera (dev mode)
- npm run dev

3. foldery/pliki.
- src/App.tsx -> główny plik projektu popipnany w index.html:   
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
- pliki TypeScript w React mają rozszerzenie .tsx
- w React funkcje w plikach tsx mogą zwracać tagi html (return <h1>Hello World</h1>;)
- By użyć pliku tsx trzeba go eksportować (export default nazwa_pliku;)
- komponenty tworzyć w folderze src

4. Uzywanie funkcji z plików tsx:
- import Message from "./Nazwa_Pliku";
- <Nazwa_Pliku></Nazwa_Pliku>

5. Instalowanie bibliotek
- npm install bootstrap
- w main.tsx zaimportowanie ich

6. Zwracanie kodu Html.
- class zamienić na className (<li className="list-group-item">An item</li>) 
- komponent nie może zwracać więcej niż jeden element
- View -> Command Palette -> wrap with Abbreviation-> nazwa elementu w jaki ma być zapakowany zaznaczony kod 
(import { Fragment } from "react/jsx-runtime"; i zapakować w Fragment nie div) lub <> bez importowania
- By wyświetlić tablice w elementach html należy je zmapować:  {items.map((item) => (<li key={item} className="list-group-item">{item}</li>))}
- Każdy element html powinien mieć unikalny key
- warunek przy zwracaniu: { items.length == 0 ? <p>Brak</p> : null} lub {items.length == 0 && <p>Brak</p>}

Czas: 38:37